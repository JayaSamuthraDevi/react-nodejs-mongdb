{"ast":null,"code":"const form = document.querySelector('#form');\nconst email = document.querySelector('#email');\nconst fullname = document.querySelector('#fullname');\nconst lastname = document.querySelector('#lastname');\nconst mobile = document.querySelector('#mobile');\nconst dob = document.querySelector('#dob');\nconst validateInputs = e => {\n  validate(e.target.name);\n};\nconst validate = name => {\n  switch (name) {\n    case \"email\":\n      if (value.emailId === \"\") {\n        setErrors({\n          name,\n          email: \"Email id is required!\"\n        });\n        return false;\n      } else if (!validEmailregex.test(value.email)) {\n        setErrors({\n          ...errors,\n          emailId: \"Invalid email id!\"\n        });\n      } else if (!emailIdAvail(value.email)) {\n        setErrors({\n          ...errors,\n          emailId: \"Email id already exist!\"\n        });\n      } else {\n        setErrors({\n          ...errors,\n          emailId: \"\"\n        });\n        return true;\n      }\n      return false;\n  }\n};","map":{"version":3,"names":["form","document","querySelector","email","fullname","lastname","mobile","dob","validateInputs","e","validate","target","name","value","emailId","setErrors","validEmailregex","test","errors","emailIdAvail"],"sources":["/home/divum/Documents/register/client/src/Validate.js"],"sourcesContent":["const form = document.querySelector('#form')\nconst email = document.querySelector('#email');\nconst fullname = document.querySelector('#fullname');\nconst lastname = document.querySelector('#lastname');\nconst mobile = document.querySelector('#mobile');\nconst dob = document.querySelector('#dob');\n\n\n\nconst validateInputs = (e) => {\n    validate(e.target.name);\n};\n\n\nconst validate = (name) => {\n    switch (name) {\n        case \"email\":\n            if (value.emailId === \"\") {\n              setErrors({ name, email: \"Email id is required!\" });\n              return false;\n            } else if (!validEmailregex.test(value.email)) {\n              setErrors({ ...errors, emailId: \"Invalid email id!\" });\n            } else if (!emailIdAvail(value.email)) {\n              setErrors({ ...errors, emailId: \"Email id already exist!\" });\n            } else {\n              setErrors({ ...errors, emailId: \"\" });\n              return true;\n            }\n            return false;\n          }\n\n\n\n\n}"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AAC5C,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;AAC9C,MAAME,QAAQ,GAAGH,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;AACpD,MAAMG,QAAQ,GAAGJ,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;AACpD,MAAMI,MAAM,GAAGL,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;AAChD,MAAMK,GAAG,GAAGN,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;AAI1C,MAAMM,cAAc,GAAIC,CAAC,IAAK;EAC1BC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,CAAC;AAC3B,CAAC;AAGD,MAAMF,QAAQ,GAAIE,IAAI,IAAK;EACvB,QAAQA,IAAI;IACR,KAAK,OAAO;MACR,IAAIC,KAAK,CAACC,OAAO,KAAK,EAAE,EAAE;QACxBC,SAAS,CAAC;UAAEH,IAAI;UAAET,KAAK,EAAE;QAAwB,CAAC,CAAC;QACnD,OAAO,KAAK;MACd,CAAC,MAAM,IAAI,CAACa,eAAe,CAACC,IAAI,CAACJ,KAAK,CAACV,KAAK,CAAC,EAAE;QAC7CY,SAAS,CAAC;UAAE,GAAGG,MAAM;UAAEJ,OAAO,EAAE;QAAoB,CAAC,CAAC;MACxD,CAAC,MAAM,IAAI,CAACK,YAAY,CAACN,KAAK,CAACV,KAAK,CAAC,EAAE;QACrCY,SAAS,CAAC;UAAE,GAAGG,MAAM;UAAEJ,OAAO,EAAE;QAA0B,CAAC,CAAC;MAC9D,CAAC,MAAM;QACLC,SAAS,CAAC;UAAE,GAAGG,MAAM;UAAEJ,OAAO,EAAE;QAAG,CAAC,CAAC;QACrC,OAAO,IAAI;MACb;MACA,OAAO,KAAK;EACd;AAKV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}